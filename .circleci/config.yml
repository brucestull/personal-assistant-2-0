# Python CircleCI 2.0 configuration file
version: 2
jobs:
  build_and_test:
    docker:
      - image: cimg/python:3.11.5
    parallelism: 3

    working_directory: ~/repo

    steps:
      # Step 1: obtain repo from GitHub
      - checkout

      # Step 2: create virtual env and install dependencies
      - run:
          name: Install Dependencies
          command: |
            pipenv install

      # Step 3: run linter
      - run:
          name: Run Linter
          command: |
            pipenv run flake8

      # Step 4: run tests and coverage
      - run:
          name: Run Tests and Coverage
          command: |
            pipenv run coverage run --source='.' --omit="*/asgi.py,*/wsgi.py,*/manage.py,*/config/settings.py" ./manage.py test
            pipenv run coverage report

  deploy:
    docker:
      - image: cimg/python:3.11.5
    steps:
      # Step 5: obtain repo from GitHub
      - checkout
      # Step 6: Install Heroku CLI
      - run:
          name: Install Heroku CLI
          command: |
            curl https://cli-assets.heroku.com/install.sh | sh
          when: on_success

      # Step 7: Authenticate with Heroku
      - run:
          name: Authenticate with Heroku
          command: echo $HEROKU_API_KEY | heroku auth:token
          when: on_success

      # Step 8: Deploy to Heroku
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/flynnt-knapp.git $CIRCLE_SHA1:refs/heads/master
          when: on_success
      # Step 9: Ensure Celery worker is running
      - run:
          name: Ensure Celery Worker Is Running
          command: |
            heroku ps:scale worker=1 --app flynnt-knapp
          when: on_success

workflows:
  version: 2
  build_then_deploy:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: main
