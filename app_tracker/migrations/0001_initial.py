# Generated by Django 4.1.7 on 2025-05-29 01:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this object was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this object was last updated.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the application.",
                        max_length=255,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of the application.",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "production_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of the application's production deployment.",
                        null=True,
                        verbose_name="Production URL",
                    ),
                ),
                (
                    "repository_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of the application's repository.",
                        null=True,
                        verbose_name="Repository URL",
                    ),
                ),
                (
                    "reference_repository_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of the application's reference repository.",
                        null=True,
                        verbose_name="Reference Repository URL",
                    ),
                ),
                (
                    "reference_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of the application's reference.",
                        null=True,
                        verbose_name="Reference URL",
                    ),
                ),
                (
                    "is_official_repository",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application is a repository for an official app maintained by some other organization.",
                        verbose_name="Is Official Repository",
                    ),
                ),
                (
                    "is_adapted_repository",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application is a repository adapted from some other source.",
                        verbose_name="Is Adapted Repository",
                    ),
                ),
                (
                    "is_archive_repository",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application is a repository for an archived app that is no longer maintained.",
                        verbose_name="Is Archive Repository",
                    ),
                ),
                (
                    "project_board_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of the application's project board.",
                        null=True,
                        verbose_name="Project Board URL",
                    ),
                ),
                (
                    "is_favorite",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application is a favorite.",
                        verbose_name="Is Favorite",
                    ),
                ),
                (
                    "is_simple_example",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application is a simple example.",
                        verbose_name="Is Simple Example",
                    ),
                ),
                (
                    "has_custom_user",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application has a custom user model.",
                        verbose_name="Has Custom User",
                    ),
                ),
                (
                    "has_sticky_footer",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application has a sticky footer.",
                        verbose_name="Has Sticky Footer",
                    ),
                ),
                (
                    "has_prod_deployment",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application has a production deployment.",
                        verbose_name="Has Production Deployment",
                    ),
                ),
                (
                    "has_cicd",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application has CI/CD implemented.",
                        verbose_name="Has CI/CD",
                    ),
                ),
                (
                    "has_email_sending",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application has email sending capabilities.",
                        verbose_name="Has Email Sending",
                    ),
                ),
                (
                    "repository_is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application's repository is public.",
                        verbose_name="Repository is Public",
                    ),
                ),
                (
                    "settings_in_environment",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application's settings are in the environment.",
                        verbose_name="Settings in Environment",
                    ),
                ),
                (
                    "settings_in_dot_env_file",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application's settings are in an environment file.",
                        verbose_name="Settings in Environment File",
                    ),
                ),
                (
                    "settings_in_dot_yml_file",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application's settings are in a YAML file.",
                        verbose_name="Settings in YAML File",
                    ),
                ),
                (
                    "is_template_repository",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not the application's repository is a template repository.",
                        verbose_name="Is Template Repository",
                    ),
                ),
                (
                    "testing_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                            ("none", "None"),
                        ],
                        help_text="The relative amount of testing coverage for the application.",
                        max_length=6,
                        null=True,
                        verbose_name="Testing Level",
                    ),
                ),
                (
                    "all_tests_passing",
                    models.BooleanField(
                        default=False,
                        help_text="Whether or not all tests are passing.",
                        verbose_name="All Tests Passing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LanguageFrameworkSystem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this object was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this object was last updated.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the language, framework, or system used in the application.",
                        max_length=30,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Language/Framework/Systems",
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this object was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this object was last updated.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the project.",
                        max_length=255,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of the project.",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "owner",
                    models.ManyToManyField(
                        help_text="The owner(s) of the project.",
                        related_name="projects",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner(s)",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrganizationalConcept",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this object was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this object was last updated.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the organizational concept.",
                        max_length=50,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of the organizational concept.",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "applications",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The application(s) that the organizational concept is associated with.",
                        to="app_tracker.application",
                        verbose_name="Application(s)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organizational Concept",
                "verbose_name_plural": "Organizational Concepts",
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this object was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this object was last updated.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="The title of the note.", max_length=255
                    ),
                ),
                ("content", models.TextField(help_text="The content of the note.")),
                (
                    "application",
                    models.ForeignKey(
                        blank=True,
                        help_text="The application that the note is associated with.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="app_tracker.application",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this object was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this object was last updated.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the label.",
                        max_length=50,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "hue",
                    models.CharField(
                        blank=True,
                        help_text="The color of the label tag (e.g. '#2BDCC7', '#FF0000', 'ocre').",
                        max_length=25,
                        null=True,
                        verbose_name="Hue",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of the label.",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "application",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The application(s) that the label is associated with.",
                        to="app_tracker.application",
                        verbose_name="Application(s)",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this object was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this object was last updated.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the Django model.",
                        max_length=255,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="The description of the Django model.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "is_current_model",
                    models.BooleanField(
                        default=False,
                        help_text="'True' if this model is currently used in the application, 'False' if this model is not currently used in the application.",
                        verbose_name="Is Current Model",
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="django_models",
                        to="app_tracker.application",
                        verbose_name="Application",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="application",
            name="language_framework_systems",
            field=models.ManyToManyField(
                help_text="The languages, frameworks, and systems used in the application.",
                related_name="applications",
                to="app_tracker.languageframeworksystem",
                verbose_name="Language/Framework/Systems",
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="project",
            field=models.ManyToManyField(
                blank=True,
                help_text="The project(s) that the application is associated with.",
                related_name="applications",
                to="app_tracker.project",
                verbose_name="Project",
            ),
        ),
    ]
